name: Publication task

on:
  release:
    types: [published]
    branches:
    - master

jobs:
  generateJavadoc:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.3.2
      with:
        ref: 'master'
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Generate Javadoc
      run: ./gradlew javadoc
    - name: Push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "actions@github.com"
        
        git add docs
        git commit -m "Update Javadoc (${GITHUB_SHA:0:7})"
        git push
  publish:
    needs: [generateJavadoc]
    if: success()
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.3.2
    - name: Set up Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Publish (Bintray)
      id: publish_bintray
      env:
        BintrayUser: ${{ secrets.bintrayUsername }}
        BintrayApiKey: ${{ secrets.bintrayApiKey }}
        VcsTag: ${{ github.event.release.tag_name }}
      run: ./gradlew bintrayUpload
    #- name: Publish (GitHub Packages)
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  run: ./gradlew publish
    - name: Zip files
      working-directory: ./build/libs
      run: zip JavaBotBlockAPI-${{ github.event.release.tag_name }}.zip *.jar
    - name: Upload to release
      uses: AButler/upload-release-assets@v2.0
      with:
        files: 'build/libs/JavaBotBlockAPI-${{ github.event.release.tag_name }}.zip;build/libs/*.jar'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
  sendMessage:
    needs: [publish]
    if: success()
    runs-on: ubuntu-latest
    steps:
    - name: Discord notification
      uses: rjstone/discord-webhook-notify@v1
      with:
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
        severity: info
        avatarUrl: 'https://docs.botblock.org/JavaBotBlockAPI/assets/img/jbba.png'
        username: 'New release'
        text: '${{ github.event.release.name }}'
        description: '[**Release Information**](${{ github.event.release.html_url }})'
        details: '${{ github.event.release.body }}'
        footer: 'Version ${{github.event.release.tag_name}}'
