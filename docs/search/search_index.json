{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This is the wiki of JavaBotBlockAPI. It tries to cover common questions with the API and provide information about it. Pages \u00b6 Changelog Methods \u00b6 BotBlockAPI GET GetBotAction GetListAction POST PostAction Deprecated \u00b6 GetAction RequestHandler Additional pages \u00b6 Javadocs Dev Builds BotBlock API Docs","title":"Welcome"},{"location":"#welcome","text":"This is the wiki of JavaBotBlockAPI. It tries to cover common questions with the API and provide information about it.","title":"Welcome"},{"location":"#pages","text":"Changelog","title":"Pages"},{"location":"#methods","text":"BotBlockAPI GET GetBotAction GetListAction POST PostAction","title":"Methods"},{"location":"#deprecated","text":"GetAction RequestHandler","title":"Deprecated"},{"location":"#additional-pages","text":"Javadocs Dev Builds BotBlock API Docs","title":"Additional pages"},{"location":"wiki/changelog/","text":"Changelog \u00b6 This page lists all versions of JavaBotBlockAPI and the changes being made. Important Numbers marked with a * are not available on bintray. You may use jitpack.io for downloading those. Numbers marked with a ** will require you to add https://dl.bintray.com/andre601/maven to your build.gradle or pom.xml as a repository. Numbers below version 4.0.0 use com.andre601 as package and not org.botblock and also require the above repo-url. v5 \u00b6 Split up the different GET actions into bot and list related actions. Many new GET actions added for list related stuff. 5.1.17 \u00b6 Site updated: Added BOTSDATABASE_COM Dependencies updated: OkHttp: 4.2.2 to 4.7.2 JDA: 4.1.1_137 to 4.1.1_154 5.1.16 \u00b6 Site updated: Deprecated CLOUD_BOTLIST_XYZ Deprecated CLOUDLIST_XYZ Deprecated DIVINEDISCORDBOTS_COM Removed ARCANE_BOTCENTER_XYZ Removed DISCORDBOTREVIEWS_XYZ Dependencies updated: JDA: 4.1.1_136 to 4.1.1_137 5.1.15 \u00b6 Site updated: Deprecated LBOTS_ORG Deprecated DISCORDBOT_WORLD Dependencies updated: JDA: 4.1.1_105 to 4.1.1_136 5.1.14 \u00b6 Site updated: Added DISCORDLIST_CO Deprecated DISCORDBOTREVIEW_XYZ Removed TOP_GG 5.1.13 \u00b6 Site updated: Added ARCANE_CENTER_XYZ Deprecated ARCANE_BOT_CENTER_XYZ Removed DISCORDBESTBOTS_XYZ and DISCORDBOTS_GG Changed ApiField enum names and deprecated old ones. 5.1.12 \u00b6 Improve format of RatelimitedException#getMessage() Added toString() for RatelimitedException 5.1.11 \u00b6 Fix version 5.1.10* \u00b6 Site updated: Added SPACE_BOT_LIST_ORG 5.1.9 \u00b6 Site updated: Added CLOUDLIST_XYZ Dependencies updated: JDA: 4.1.1_101 to 4.1.1_105 5.1.8 \u00b6 Same changes as 5.1.7 5.1.7* \u00b6 Changed RatelimitedException from extending Throwable to extending RuntimeException. You no longer need to try-cacth the RatelimitedException. Dependencies updated: JDA: 4.1.0_100 to 4.1.1_101 5.1.6 \u00b6 Site updated: Deprecated TOP_GG for this reason . 5.1.5* \u00b6 The GitHub Action to upload assets to the release now adds the jar files and the zip file to the release. 5.1.4 \u00b6 Test release for upload to release-action. 5.1.3 \u00b6 Dependencies updated: JDA: 4.1.0_99 to 4.1.0_100 5.1.2 \u00b6 BotBlockAPI will now throw an IllegalArgumentException when the provided Map is empty. The Integer updateDelay in BotBlockAPI is now marked as @NotNull 5.1.1 \u00b6 Site updated: Added GLENNBOTLIST_XYZ 5.1.0 \u00b6 Removed deprecated GetAction class. Use GetBotAction or GetListAction respectively. 5.0.5* \u00b6 Second test for adding zip file to Release. 5.0.4* \u00b6 Test for adding zip file to Release. 5.0.3* \u00b6 Debugging. 5.0.2 \u00b6 Changed @DeprecatedSince annotation. Dependencies updated: JDA: 4.1.0_96 to 4.1.0_97 5.0.1 \u00b6 Renamed getFilteredList(String) to getFilteredLists(String) 5.0.0 \u00b6 Deprecated GetAction . GetBotAction and GetListAction were added as replacement. New methods added to GetListAction : getApiField(String, Site|String, ApiField) getBotWidgetUrl(String, Site|String) getDescription(String, Site|String) getDiscordInvite(String, Site|String) getFeatures(String, Site|String) getFilteredList(String) getIcon(String, Site|String) getId(String, Site|String) getLanguage(String, Site|String) getList(String, Site|String) getLists(String) getName(String, Site|String) getOwners(String, Site|String) getTimeAdded(String, Site|String) getUrl(String, Site|String) isDefunct(String, Site|String) isDiscordOnly(String, Site|String) v4 \u00b6 Package renaming from com.andre601 to org.botblock . Many new GET methods. v4.3.0 \u00b6 Adds new GetAction getBotListFeatures(String, Site|String) : Returns a JSONArray with all features the bot list has. v4.2.5** \u00b6 This was a test release for the attachment of zip files to the release. It failed. v4.2.4 \u00b6 Site updated: Added ARCANE_BOTCENTER_XYZ Added DBLISTA_PL v4.2.3 \u00b6 Site updated: Deprecated DISCORDBESTBOTS_XYZ Use DISCORDEXTREMELIST_XYZ instead. v4.2.2 \u00b6 Site updated: Removed GLENNBOTLIST_XYZ v4.2.1** \u00b6 Removed unused imports. v4.2.0** \u00b6 Added new get methods to GetAction: getDiscriminator(Long|String) : Returns the discriminator of the bot or an empty String. getGitHub(Long|String) : Returns GitHub url or an empty String. getLibrary(Long|String) : Returns the library used by the bot or an empty String. getName(Long|String) : Returns the name of the bot or an empty String. getPrefix(Long|String) : Returns the command prefix of the bot or an empty String. getSupportLink(Long|String) : Returns the support link (i.e. Discord invite) or an empty String. getWebsite(Long|String) : Returns the website link of the bot or an empty String. getServerCount(Long|String id) is now declared as @Nullable meaning result may be null. v4.1.1 \u00b6 @DeprecatedSince was slightly changed. v4.1.0 \u00b6 Merged the @ReplacedWith into the @DeprecatedSince annotation. v4.0.4 \u00b6 For unknown reason is the wrapper not available through normal downloads... v4.0.3 \u00b6 Fixed broken version system. v4.0.2* \u00b6 Updated version system. Releases are back to #.#.# format while dev builds are #.#.#_# v4.0.1_0 \u00b6 Updated message of RatelimitedException v4.0.0_0 \u00b6 Updated packages from com.andre601 to org.botblock . This is a breaking change. v3 \u00b6 Separated POST and GET requests into their own respective classes. Dev builds where also available from v3.1.0 onwards. v3.3.0_0 \u00b6 Version now has a build-number attached (used for Jenkin builds) v3.2.1 \u00b6 Site updated: Added GLENNBOTLIST_XYZ Added CLOUD_BOTLIST_XYZ v3.2.0 \u00b6 Added @DeprecatedSince and @ReplacedWith annotations v3.1.0 \u00b6 Updated Gradle to v5.5 Added links to Jenkins for dev builds (Thanks CodeMC) Dependencies updated: Shadow: 4.0.4 to 5.2.0 JDA: 4.0.0_73 to 4.1.0_81 v3.0.6 \u00b6 It's targetCompatibility not targetCompitability v3.0.5* \u00b6 Fixed broken build.gradle v3.0.4* \u00b6 RequestHandler was removed Dependencies updated: JDA: 4.0.0_70 to 4.0.0_73 v3.0.3 \u00b6 Same changes as v3.0.2 v3.0.2* \u00b6 Dependencies updated: JDA: 4.0.0_61 to 4.0.0_70 v3.0.1 \u00b6 Site updated: Deprecated Site.DISCORDBOTS_ORG . Use Site.TOP_GG instead. v3.0.0 \u00b6 Moved post and get methods to their own class GetAction was created for all GET methods. PostAction was created for all POST methods. RequestHandler ( com.andre601.javabotblockapi.RequestHandler ) is now deprecated. Site updated: Added TOP_GG New methods getInvite(Long|String) and getServerCount(Long|String) added. Timeouts for POST requests where made dynamic. GET methods which used either an JDA or ShardManager instance got removed. Renamed multiple methods: getBotInfo and getBotInfos where renamed to getBotListInfo getAll was renamed to getBotInfo startAutoPosting was renamed to enableAutoPost stopAutoPosting was renamed to disableAutoPost Dependencies updated: JDA: 4.0.0_52 to 4.0.0_61 annotations: 17.0.0 to 18.0.0 v2 \u00b6 Added support for GET methods and added the Site enum. Additionally added support for first v4 versions of JDA. v2.3.9 \u00b6 Dependencies updated: JDA: 4.0.0_48 to 4.0.0_52 OkHttp: 4.2.1 to 4.2.2 v2.3.8 \u00b6 Implemented GitHub actions for automated releasing to Bintray. v2.3.6 \u00b6 2nd attempt on integrating GitHub actions (failed) v2.3.5 \u00b6 Dependencies updated: JDA: 4.0.0_45 to 4.0.0_48 Updated to Java 11. It can still work with Java 8. v2.3.4 \u00b6 Sites updated: Fixed wrong Site name from DISCORSDBESTBOTS_XYZ to DISCORDBESTBOTS_XYZ v2.3.3 \u00b6 Site updated: Added DISCORDEXTREMELIST_XYZ Removed DISCORDBOTLIST_US_TO Removed GitHub Actions for now. v2.3.2 \u00b6 Attempt to fix GitHub's Actions. v2.3.1 \u00b6 Adding GitHub Actions to workflow. v2.3.0 \u00b6 Implemented caching to get methods. getBotlists() and getBotlist(String|Site site) now require an additional String parameter. Dependencies updated: JDA: 4.0.0_40 to 4.0.0_45 v2.2.1 \u00b6 Dependencies updated: JDA: 4.0.0_39 to 4.0.0_40 v2.2.0 \u00b6 Dependencies updated: JDA: 4.BETA.0_32 to 4.0.0_39 (Official release of JDA v4) v2.1.1 \u00b6 Site updated: Added YABL_XYZ v2.1.0 \u00b6 Added new Site enum to have easier methods and reliable site names v2.0.2 \u00b6 Dependencies updated JDA: 4.BETA.0_30 to 4.BETA.0_32 v2.0.1 \u00b6 Dependencies updated: JDA: 4.BETA.0_23 to 4.BETA.0_30 v2.0.0 \u00b6 Added new get methods for bot and botlist infos. Dependencies updated: JDA: Updated to 4.BETA.0_23 v1 \u00b6 First releases of the Java Wrapper. v1.0.5 \u00b6 Updated minimal delay to 2 since rate limit is 1/120s. v1.0.4 \u00b6 Made RequestHandler an empty constructor. v1.0.3 \u00b6 Fixing JSONException when BotBlock.org has no 'failure' object present. v1.0.2 \u00b6 Moved JDA and ShardManager from BotBlockAPI to RequestHandler methods. v1.0.1 \u00b6 Make BotBlockAPI.Builder static. Fixes Non enclosing class error v1.0.0 \u00b6 First release","title":"Changelog"},{"location":"wiki/changelog/#changelog","text":"This page lists all versions of JavaBotBlockAPI and the changes being made. Important Numbers marked with a * are not available on bintray. You may use jitpack.io for downloading those. Numbers marked with a ** will require you to add https://dl.bintray.com/andre601/maven to your build.gradle or pom.xml as a repository. Numbers below version 4.0.0 use com.andre601 as package and not org.botblock and also require the above repo-url.","title":"Changelog"},{"location":"wiki/changelog/#v5","text":"Split up the different GET actions into bot and list related actions. Many new GET actions added for list related stuff.","title":"v5"},{"location":"wiki/changelog/#5117","text":"Site updated: Added BOTSDATABASE_COM Dependencies updated: OkHttp: 4.2.2 to 4.7.2 JDA: 4.1.1_137 to 4.1.1_154","title":"5.1.17"},{"location":"wiki/changelog/#5116","text":"Site updated: Deprecated CLOUD_BOTLIST_XYZ Deprecated CLOUDLIST_XYZ Deprecated DIVINEDISCORDBOTS_COM Removed ARCANE_BOTCENTER_XYZ Removed DISCORDBOTREVIEWS_XYZ Dependencies updated: JDA: 4.1.1_136 to 4.1.1_137","title":"5.1.16"},{"location":"wiki/changelog/#5115","text":"Site updated: Deprecated LBOTS_ORG Deprecated DISCORDBOT_WORLD Dependencies updated: JDA: 4.1.1_105 to 4.1.1_136","title":"5.1.15"},{"location":"wiki/changelog/#5114","text":"Site updated: Added DISCORDLIST_CO Deprecated DISCORDBOTREVIEW_XYZ Removed TOP_GG","title":"5.1.14"},{"location":"wiki/changelog/#5113","text":"Site updated: Added ARCANE_CENTER_XYZ Deprecated ARCANE_BOT_CENTER_XYZ Removed DISCORDBESTBOTS_XYZ and DISCORDBOTS_GG Changed ApiField enum names and deprecated old ones.","title":"5.1.13"},{"location":"wiki/changelog/#5112","text":"Improve format of RatelimitedException#getMessage() Added toString() for RatelimitedException","title":"5.1.12"},{"location":"wiki/changelog/#5111","text":"Fix version","title":"5.1.11"},{"location":"wiki/changelog/#5110","text":"Site updated: Added SPACE_BOT_LIST_ORG","title":"5.1.10*"},{"location":"wiki/changelog/#519","text":"Site updated: Added CLOUDLIST_XYZ Dependencies updated: JDA: 4.1.1_101 to 4.1.1_105","title":"5.1.9"},{"location":"wiki/changelog/#518","text":"Same changes as 5.1.7","title":"5.1.8"},{"location":"wiki/changelog/#517","text":"Changed RatelimitedException from extending Throwable to extending RuntimeException. You no longer need to try-cacth the RatelimitedException. Dependencies updated: JDA: 4.1.0_100 to 4.1.1_101","title":"5.1.7*"},{"location":"wiki/changelog/#516","text":"Site updated: Deprecated TOP_GG for this reason .","title":"5.1.6"},{"location":"wiki/changelog/#515","text":"The GitHub Action to upload assets to the release now adds the jar files and the zip file to the release.","title":"5.1.5*"},{"location":"wiki/changelog/#514","text":"Test release for upload to release-action.","title":"5.1.4"},{"location":"wiki/changelog/#513","text":"Dependencies updated: JDA: 4.1.0_99 to 4.1.0_100","title":"5.1.3"},{"location":"wiki/changelog/#512","text":"BotBlockAPI will now throw an IllegalArgumentException when the provided Map is empty. The Integer updateDelay in BotBlockAPI is now marked as @NotNull","title":"5.1.2"},{"location":"wiki/changelog/#511","text":"Site updated: Added GLENNBOTLIST_XYZ","title":"5.1.1"},{"location":"wiki/changelog/#510","text":"Removed deprecated GetAction class. Use GetBotAction or GetListAction respectively.","title":"5.1.0"},{"location":"wiki/changelog/#505","text":"Second test for adding zip file to Release.","title":"5.0.5*"},{"location":"wiki/changelog/#504","text":"Test for adding zip file to Release.","title":"5.0.4*"},{"location":"wiki/changelog/#503","text":"Debugging.","title":"5.0.3*"},{"location":"wiki/changelog/#502","text":"Changed @DeprecatedSince annotation. Dependencies updated: JDA: 4.1.0_96 to 4.1.0_97","title":"5.0.2"},{"location":"wiki/changelog/#501","text":"Renamed getFilteredList(String) to getFilteredLists(String)","title":"5.0.1"},{"location":"wiki/changelog/#500","text":"Deprecated GetAction . GetBotAction and GetListAction were added as replacement. New methods added to GetListAction : getApiField(String, Site|String, ApiField) getBotWidgetUrl(String, Site|String) getDescription(String, Site|String) getDiscordInvite(String, Site|String) getFeatures(String, Site|String) getFilteredList(String) getIcon(String, Site|String) getId(String, Site|String) getLanguage(String, Site|String) getList(String, Site|String) getLists(String) getName(String, Site|String) getOwners(String, Site|String) getTimeAdded(String, Site|String) getUrl(String, Site|String) isDefunct(String, Site|String) isDiscordOnly(String, Site|String)","title":"5.0.0"},{"location":"wiki/changelog/#v4","text":"Package renaming from com.andre601 to org.botblock . Many new GET methods.","title":"v4"},{"location":"wiki/changelog/#v430","text":"Adds new GetAction getBotListFeatures(String, Site|String) : Returns a JSONArray with all features the bot list has.","title":"v4.3.0"},{"location":"wiki/changelog/#v425","text":"This was a test release for the attachment of zip files to the release. It failed.","title":"v4.2.5**"},{"location":"wiki/changelog/#v424","text":"Site updated: Added ARCANE_BOTCENTER_XYZ Added DBLISTA_PL","title":"v4.2.4"},{"location":"wiki/changelog/#v423","text":"Site updated: Deprecated DISCORDBESTBOTS_XYZ Use DISCORDEXTREMELIST_XYZ instead.","title":"v4.2.3"},{"location":"wiki/changelog/#v422","text":"Site updated: Removed GLENNBOTLIST_XYZ","title":"v4.2.2"},{"location":"wiki/changelog/#v421","text":"Removed unused imports.","title":"v4.2.1**"},{"location":"wiki/changelog/#v420","text":"Added new get methods to GetAction: getDiscriminator(Long|String) : Returns the discriminator of the bot or an empty String. getGitHub(Long|String) : Returns GitHub url or an empty String. getLibrary(Long|String) : Returns the library used by the bot or an empty String. getName(Long|String) : Returns the name of the bot or an empty String. getPrefix(Long|String) : Returns the command prefix of the bot or an empty String. getSupportLink(Long|String) : Returns the support link (i.e. Discord invite) or an empty String. getWebsite(Long|String) : Returns the website link of the bot or an empty String. getServerCount(Long|String id) is now declared as @Nullable meaning result may be null.","title":"v4.2.0**"},{"location":"wiki/changelog/#v411","text":"@DeprecatedSince was slightly changed.","title":"v4.1.1"},{"location":"wiki/changelog/#v410","text":"Merged the @ReplacedWith into the @DeprecatedSince annotation.","title":"v4.1.0"},{"location":"wiki/changelog/#v404","text":"For unknown reason is the wrapper not available through normal downloads...","title":"v4.0.4"},{"location":"wiki/changelog/#v403","text":"Fixed broken version system.","title":"v4.0.3"},{"location":"wiki/changelog/#v402","text":"Updated version system. Releases are back to #.#.# format while dev builds are #.#.#_#","title":"v4.0.2*"},{"location":"wiki/changelog/#v401_0","text":"Updated message of RatelimitedException","title":"v4.0.1_0"},{"location":"wiki/changelog/#v400_0","text":"Updated packages from com.andre601 to org.botblock . This is a breaking change.","title":"v4.0.0_0"},{"location":"wiki/changelog/#v3","text":"Separated POST and GET requests into their own respective classes. Dev builds where also available from v3.1.0 onwards.","title":"v3"},{"location":"wiki/changelog/#v330_0","text":"Version now has a build-number attached (used for Jenkin builds)","title":"v3.3.0_0"},{"location":"wiki/changelog/#v321","text":"Site updated: Added GLENNBOTLIST_XYZ Added CLOUD_BOTLIST_XYZ","title":"v3.2.1"},{"location":"wiki/changelog/#v320","text":"Added @DeprecatedSince and @ReplacedWith annotations","title":"v3.2.0"},{"location":"wiki/changelog/#v310","text":"Updated Gradle to v5.5 Added links to Jenkins for dev builds (Thanks CodeMC) Dependencies updated: Shadow: 4.0.4 to 5.2.0 JDA: 4.0.0_73 to 4.1.0_81","title":"v3.1.0"},{"location":"wiki/changelog/#v306","text":"It's targetCompatibility not targetCompitability","title":"v3.0.6"},{"location":"wiki/changelog/#v305","text":"Fixed broken build.gradle","title":"v3.0.5*"},{"location":"wiki/changelog/#v304","text":"RequestHandler was removed Dependencies updated: JDA: 4.0.0_70 to 4.0.0_73","title":"v3.0.4*"},{"location":"wiki/changelog/#v303","text":"Same changes as v3.0.2","title":"v3.0.3"},{"location":"wiki/changelog/#v302","text":"Dependencies updated: JDA: 4.0.0_61 to 4.0.0_70","title":"v3.0.2*"},{"location":"wiki/changelog/#v301","text":"Site updated: Deprecated Site.DISCORDBOTS_ORG . Use Site.TOP_GG instead.","title":"v3.0.1"},{"location":"wiki/changelog/#v300","text":"Moved post and get methods to their own class GetAction was created for all GET methods. PostAction was created for all POST methods. RequestHandler ( com.andre601.javabotblockapi.RequestHandler ) is now deprecated. Site updated: Added TOP_GG New methods getInvite(Long|String) and getServerCount(Long|String) added. Timeouts for POST requests where made dynamic. GET methods which used either an JDA or ShardManager instance got removed. Renamed multiple methods: getBotInfo and getBotInfos where renamed to getBotListInfo getAll was renamed to getBotInfo startAutoPosting was renamed to enableAutoPost stopAutoPosting was renamed to disableAutoPost Dependencies updated: JDA: 4.0.0_52 to 4.0.0_61 annotations: 17.0.0 to 18.0.0","title":"v3.0.0"},{"location":"wiki/changelog/#v2","text":"Added support for GET methods and added the Site enum. Additionally added support for first v4 versions of JDA.","title":"v2"},{"location":"wiki/changelog/#v239","text":"Dependencies updated: JDA: 4.0.0_48 to 4.0.0_52 OkHttp: 4.2.1 to 4.2.2","title":"v2.3.9"},{"location":"wiki/changelog/#v238","text":"Implemented GitHub actions for automated releasing to Bintray.","title":"v2.3.8"},{"location":"wiki/changelog/#v236","text":"2nd attempt on integrating GitHub actions (failed)","title":"v2.3.6"},{"location":"wiki/changelog/#v235","text":"Dependencies updated: JDA: 4.0.0_45 to 4.0.0_48 Updated to Java 11. It can still work with Java 8.","title":"v2.3.5"},{"location":"wiki/changelog/#v234","text":"Sites updated: Fixed wrong Site name from DISCORSDBESTBOTS_XYZ to DISCORDBESTBOTS_XYZ","title":"v2.3.4"},{"location":"wiki/changelog/#v233","text":"Site updated: Added DISCORDEXTREMELIST_XYZ Removed DISCORDBOTLIST_US_TO Removed GitHub Actions for now.","title":"v2.3.3"},{"location":"wiki/changelog/#v232","text":"Attempt to fix GitHub's Actions.","title":"v2.3.2"},{"location":"wiki/changelog/#v231","text":"Adding GitHub Actions to workflow.","title":"v2.3.1"},{"location":"wiki/changelog/#v230","text":"Implemented caching to get methods. getBotlists() and getBotlist(String|Site site) now require an additional String parameter. Dependencies updated: JDA: 4.0.0_40 to 4.0.0_45","title":"v2.3.0"},{"location":"wiki/changelog/#v221","text":"Dependencies updated: JDA: 4.0.0_39 to 4.0.0_40","title":"v2.2.1"},{"location":"wiki/changelog/#v220","text":"Dependencies updated: JDA: 4.BETA.0_32 to 4.0.0_39 (Official release of JDA v4)","title":"v2.2.0"},{"location":"wiki/changelog/#v211","text":"Site updated: Added YABL_XYZ","title":"v2.1.1"},{"location":"wiki/changelog/#v210","text":"Added new Site enum to have easier methods and reliable site names","title":"v2.1.0"},{"location":"wiki/changelog/#v202","text":"Dependencies updated JDA: 4.BETA.0_30 to 4.BETA.0_32","title":"v2.0.2"},{"location":"wiki/changelog/#v201","text":"Dependencies updated: JDA: 4.BETA.0_23 to 4.BETA.0_30","title":"v2.0.1"},{"location":"wiki/changelog/#v200","text":"Added new get methods for bot and botlist infos. Dependencies updated: JDA: Updated to 4.BETA.0_23","title":"v2.0.0"},{"location":"wiki/changelog/#v1","text":"First releases of the Java Wrapper.","title":"v1"},{"location":"wiki/changelog/#v105","text":"Updated minimal delay to 2 since rate limit is 1/120s.","title":"v1.0.5"},{"location":"wiki/changelog/#v104","text":"Made RequestHandler an empty constructor.","title":"v1.0.4"},{"location":"wiki/changelog/#v103","text":"Fixing JSONException when BotBlock.org has no 'failure' object present.","title":"v1.0.3"},{"location":"wiki/changelog/#v102","text":"Moved JDA and ShardManager from BotBlockAPI to RequestHandler methods.","title":"v1.0.2"},{"location":"wiki/changelog/#v101","text":"Make BotBlockAPI.Builder static. Fixes Non enclosing class error","title":"v1.0.1"},{"location":"wiki/changelog/#v100","text":"First release","title":"v1.0.0"},{"location":"wiki/deprecated/","text":"Deprecated Methods \u00b6 Below is a list of wiki pages, which contain information about methods which got either deprecated or even removed. We keep the pages to still provide support to people using older versions of JavaBotBlockAPI, altough we do not recommend staying on those, nor do we provide any support for outdated versions. Pages \u00b6 GetAction RequestHandler","title":"Deprecated"},{"location":"wiki/deprecated/#deprecated-methods","text":"Below is a list of wiki pages, which contain information about methods which got either deprecated or even removed. We keep the pages to still provide support to people using older versions of JavaBotBlockAPI, altough we do not recommend staying on those, nor do we provide any support for outdated versions.","title":"Deprecated Methods"},{"location":"wiki/deprecated/#pages","text":"GetAction RequestHandler","title":"Pages"},{"location":"wiki/deprecated/getaction/","text":"Deprecated This class is marked as deprecated since version 5.0.0! Use GetBotAction or GetListAction respectively. The GetAction class is used to retrieve values from a bot on the different Bot lists. Note The requests are cached for 2 minutes to avoid rate limits. You may disable it (see below) but it's not recommended. Index \u00b6 Disable caching GET methods (Bot) getBotInfo(Long|String) getBotListInfo(Long|String) getBotListInfo(Long|String, Site|String) getDiscriminator(Long|String) getGitHub(Long|String) getInvite(Long|String) getLibrary(Long|String) getName(Long|String) getOwners(Long|String) getPrefix(Long|String) getServerCount(Long|String) getSupportLink(Long|String) getWebsite(Long|String) GET methods (Bot list) getBotList(String, Site|String) getBotLists(String) getBotListFeatures(String, Site|String) Disable caching \u00b6 All requests performed through this class are cached by default. If you don't want this for some reason (i.e. you use your own caching system), you may disable the caching like this: // \"true\" DISABLES the caching. GetAction get = new GetAction ( true ); We highly recommend to NOT disable caching as you may get rate limited without any proper delaying of the requests. GET methods (Bot) \u00b6 getBotInfo(Long|String) \u00b6 Returns : JSONObject Retrieves the complete bot info. Example JSON (Click to open/close) { \"id\" : \"123456789012345678\" , \"username\" : \"MyBot\" , \"discriminator\" : \"1234\" , \"owners\" : [ \"234567890123456789\" ], \"server_count\" : 100 , \"invite\" : \"https://discordapp.com/oauth2/authorize?client_id=123456789012345678&scope=bot\" , \"prefix\" : \"?\" , \"website\" : \"https://mybot.com\" , \"github\" : \"https://github.com/mybot/MyBot\" , \"support\" : \"https://discord.gg/AbCdE9F\" , \"library\" : \"JDA\" , \"list_data\" : { \"lbots.org\" : [ { \"data\" : \"Unique bot data\" }, 200 ], \"botlist.space\" : [ { \"data\" : \"Unique bot data\" }, 404 ] } } getBotListInfo(Long|String) \u00b6 Returns : JSONObject Retrieves the information of a bot from all bot lists. Example JSON (Click to open/close) { \"lbots.org\" : [ { \"data\" : \"Unique bot data\" }, 200 ], \"botlist.space\" : [ { \"data\" : \"Unique bot data\" }, 404 ] } getBotListInfo(Long|String, Site|String) \u00b6 Returns : JSONArray Retrieves the information of a bot on a specific bot list. Example JSON (Click to open/close) [ {\"data\": \"Unique bot data\"}, 200 ] getDiscriminator(Long|String) \u00b6 Returns : String Retrieves the Discriminator of the bot. getGitHub(Long|String) \u00b6 Returns : Possibly-null String Retrieves the GitHub link of the bot. getInvite(Long|String) \u00b6 Returns : Possibly-null String Retrieves the OAuth Invite (Not Discord invite) of the bot. getLibrary(Long|String) \u00b6 Returns : Possibly-null String Retrieves the used library of the bot. getName(Long|String) \u00b6 Return : Possibly-null String Retrieves the name of the bot. getOwners(Long|String) \u00b6 Returns : Possibly-empty ArrayList\\ Retrieves the list of Bot Owners. getPrefix(Long|String) \u00b6 Returns : Possibly-null String Retrieves the prefix of the bot. getServerCount(Long|String) \u00b6 Returns : Possibly-null Integer Retrieves the server count of the bot. getSupportLong(Long|String) \u00b6 Returns : Possibly-null String Retrieves the Support link (i.e. Discord invite) of the bot. getWebsite(Long|String) \u00b6 Returns : Possibly-null String Retrieves the website link from the bot. GET methods (Bot list) \u00b6 getBotList(String, Site|String) \u00b6 Returns : JSONObject Retrieves the API information of a specific bot list. Example JSON (Click to open/close) { \"id\" : \"lbots.org\" , \"added\" : 1549227235 , \"name\" : \"LBots\" , \"url\" : \"https://lbots.org/\" , \"icon\" : \"https://lbots.org/static/img/logo.png\" , \"language\" : \"English\" , \"display\" : 1 , \"defunct\" : 0 , \"discord_only\" : 1 , \"description\" : \"A bot listing website that loves NSFW\" , \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null , \"api_all\" : null , \"view_bot\" : \"https://lbots.org/bots/:id\" , \"bot_widget\" : null , \"content\" : null , \"owners\" : \"Neko#0013 (367330084337745920)\" , \"discord\" : \"https://discord.gg/EKv9k6p\" , \"features\" : [ { \"name\" : \"Offers Paid Promotion\" , \"id\" : 21 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"HTML Long Description\" , \"id\" : 6 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot GitHub Link\" , \"id\" : 15 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Support Link\" , \"id\" : 8 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Website Link\" , \"id\" : 13 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Discord Bot Support Link\" , \"id\" : 12 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Voting\" , \"id\" : 2 , \"display\" : 2 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Votes sent to Webhooks\" , \"id\" : 24 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Categories or Tags\" , \"id\" : 9 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Mobile Support\" , \"id\" : 26 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Search\" , \"id\" : 23 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Requires Owner in Server\" , \"id\" : 25 , \"display\" : 0 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Server Count API\" , \"id\" : 3 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Ads on Site\" , \"id\" : 11 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Paid Access\" , \"id\" : 19 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Internationalisation Support\" , \"id\" : 27 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Iframe Long Description\" , \"id\" : 5 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Markdown Long Description\" , \"id\" : 4 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Certified Bot Vanity URLs\" , \"id\" : 18 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Donate Link\" , \"id\" : 14 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Invite Link\" , \"id\" : 7 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Vanity URLs for all\" , \"id\" : 20 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Voting Data Exposed\" , \"id\" : 16 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Additional Bot Owners/Editors\" , \"id\" : 17 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Certification Program\" , \"id\" : 10 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Widget\" , \"id\" : 22 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 } ] } getBotLists(String) \u00b6 Returns : JSONObject Retrieves the API information of all bot lists (including defunct ones). getBotListFeatures(String, Site|String) \u00b6 Returns : JSONArray Retrieves the features of a specific bot list. The listed features can be positive but also negative. Example JSON (Click to open/close) [ { \"name\" : \"Offers Paid Promotion\" , \"id\" : 21 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"HTML Long Description\" , \"id\" : 6 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot GitHub Link\" , \"id\" : 15 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Support Link\" , \"id\" : 8 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Website Link\" , \"id\" : 13 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Discord Bot Support Link\" , \"id\" : 12 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Voting\" , \"id\" : 2 , \"display\" : 2 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Votes sent to Webhooks\" , \"id\" : 24 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Categories or Tags\" , \"id\" : 9 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Mobile Support\" , \"id\" : 26 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Search\" , \"id\" : 23 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Requires Owner in Server\" , \"id\" : 25 , \"display\" : 0 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Server Count API\" , \"id\" : 3 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Ads on Site\" , \"id\" : 11 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Paid Access\" , \"id\" : 19 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Internationalisation Support\" , \"id\" : 27 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Iframe Long Description\" , \"id\" : 5 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Markdown Long Description\" , \"id\" : 4 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Certified Bot Vanity URLs\" , \"id\" : 18 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Donate Link\" , \"id\" : 14 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Invite Link\" , \"id\" : 7 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Vanity URLs for all\" , \"id\" : 20 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Voting Data Exposed\" , \"id\" : 16 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Additional Bot Owners/Editors\" , \"id\" : 17 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Certification Program\" , \"id\" : 10 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Widget\" , \"id\" : 22 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 } ]","title":"GetAction"},{"location":"wiki/deprecated/getaction/#index","text":"Disable caching GET methods (Bot) getBotInfo(Long|String) getBotListInfo(Long|String) getBotListInfo(Long|String, Site|String) getDiscriminator(Long|String) getGitHub(Long|String) getInvite(Long|String) getLibrary(Long|String) getName(Long|String) getOwners(Long|String) getPrefix(Long|String) getServerCount(Long|String) getSupportLink(Long|String) getWebsite(Long|String) GET methods (Bot list) getBotList(String, Site|String) getBotLists(String) getBotListFeatures(String, Site|String)","title":"Index"},{"location":"wiki/deprecated/getaction/#disable-caching","text":"All requests performed through this class are cached by default. If you don't want this for some reason (i.e. you use your own caching system), you may disable the caching like this: // \"true\" DISABLES the caching. GetAction get = new GetAction ( true ); We highly recommend to NOT disable caching as you may get rate limited without any proper delaying of the requests.","title":"Disable caching"},{"location":"wiki/deprecated/getaction/#get-methods-bot","text":"","title":"GET methods (Bot)"},{"location":"wiki/deprecated/getaction/#getbotinfolongstring","text":"Returns : JSONObject Retrieves the complete bot info. Example JSON (Click to open/close) { \"id\" : \"123456789012345678\" , \"username\" : \"MyBot\" , \"discriminator\" : \"1234\" , \"owners\" : [ \"234567890123456789\" ], \"server_count\" : 100 , \"invite\" : \"https://discordapp.com/oauth2/authorize?client_id=123456789012345678&scope=bot\" , \"prefix\" : \"?\" , \"website\" : \"https://mybot.com\" , \"github\" : \"https://github.com/mybot/MyBot\" , \"support\" : \"https://discord.gg/AbCdE9F\" , \"library\" : \"JDA\" , \"list_data\" : { \"lbots.org\" : [ { \"data\" : \"Unique bot data\" }, 200 ], \"botlist.space\" : [ { \"data\" : \"Unique bot data\" }, 404 ] } }","title":"getBotInfo(Long|String)"},{"location":"wiki/deprecated/getaction/#getbotlistinfolongstring","text":"Returns : JSONObject Retrieves the information of a bot from all bot lists. Example JSON (Click to open/close) { \"lbots.org\" : [ { \"data\" : \"Unique bot data\" }, 200 ], \"botlist.space\" : [ { \"data\" : \"Unique bot data\" }, 404 ] }","title":"getBotListInfo(Long|String)"},{"location":"wiki/deprecated/getaction/#getbotlistinfolongstring-sitestring","text":"Returns : JSONArray Retrieves the information of a bot on a specific bot list. Example JSON (Click to open/close) [ {\"data\": \"Unique bot data\"}, 200 ]","title":"getBotListInfo(Long|String, Site|String)"},{"location":"wiki/deprecated/getaction/#getdiscriminatorlongstring","text":"Returns : String Retrieves the Discriminator of the bot.","title":"getDiscriminator(Long|String)"},{"location":"wiki/deprecated/getaction/#getgithublongstring","text":"Returns : Possibly-null String Retrieves the GitHub link of the bot.","title":"getGitHub(Long|String)"},{"location":"wiki/deprecated/getaction/#getinvitelongstring","text":"Returns : Possibly-null String Retrieves the OAuth Invite (Not Discord invite) of the bot.","title":"getInvite(Long|String)"},{"location":"wiki/deprecated/getaction/#getlibrarylongstring","text":"Returns : Possibly-null String Retrieves the used library of the bot.","title":"getLibrary(Long|String)"},{"location":"wiki/deprecated/getaction/#getnamelongstring","text":"Return : Possibly-null String Retrieves the name of the bot.","title":"getName(Long|String)"},{"location":"wiki/deprecated/getaction/#getownerslongstring","text":"Returns : Possibly-empty ArrayList\\ Retrieves the list of Bot Owners.","title":"getOwners(Long|String)"},{"location":"wiki/deprecated/getaction/#getprefixlongstring","text":"Returns : Possibly-null String Retrieves the prefix of the bot.","title":"getPrefix(Long|String)"},{"location":"wiki/deprecated/getaction/#getservercountlongstring","text":"Returns : Possibly-null Integer Retrieves the server count of the bot.","title":"getServerCount(Long|String)"},{"location":"wiki/deprecated/getaction/#getsupportlonglongstring","text":"Returns : Possibly-null String Retrieves the Support link (i.e. Discord invite) of the bot.","title":"getSupportLong(Long|String)"},{"location":"wiki/deprecated/getaction/#getwebsitelongstring","text":"Returns : Possibly-null String Retrieves the website link from the bot.","title":"getWebsite(Long|String)"},{"location":"wiki/deprecated/getaction/#get-methods-bot-list","text":"","title":"GET methods (Bot list)"},{"location":"wiki/deprecated/getaction/#getbotliststring-sitestring","text":"Returns : JSONObject Retrieves the API information of a specific bot list. Example JSON (Click to open/close) { \"id\" : \"lbots.org\" , \"added\" : 1549227235 , \"name\" : \"LBots\" , \"url\" : \"https://lbots.org/\" , \"icon\" : \"https://lbots.org/static/img/logo.png\" , \"language\" : \"English\" , \"display\" : 1 , \"defunct\" : 0 , \"discord_only\" : 1 , \"description\" : \"A bot listing website that loves NSFW\" , \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null , \"api_all\" : null , \"view_bot\" : \"https://lbots.org/bots/:id\" , \"bot_widget\" : null , \"content\" : null , \"owners\" : \"Neko#0013 (367330084337745920)\" , \"discord\" : \"https://discord.gg/EKv9k6p\" , \"features\" : [ { \"name\" : \"Offers Paid Promotion\" , \"id\" : 21 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"HTML Long Description\" , \"id\" : 6 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot GitHub Link\" , \"id\" : 15 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Support Link\" , \"id\" : 8 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Website Link\" , \"id\" : 13 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Discord Bot Support Link\" , \"id\" : 12 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Voting\" , \"id\" : 2 , \"display\" : 2 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Votes sent to Webhooks\" , \"id\" : 24 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Categories or Tags\" , \"id\" : 9 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Mobile Support\" , \"id\" : 26 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Search\" , \"id\" : 23 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Requires Owner in Server\" , \"id\" : 25 , \"display\" : 0 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Server Count API\" , \"id\" : 3 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Ads on Site\" , \"id\" : 11 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Paid Access\" , \"id\" : 19 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Internationalisation Support\" , \"id\" : 27 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Iframe Long Description\" , \"id\" : 5 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Markdown Long Description\" , \"id\" : 4 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Certified Bot Vanity URLs\" , \"id\" : 18 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Donate Link\" , \"id\" : 14 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Invite Link\" , \"id\" : 7 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Vanity URLs for all\" , \"id\" : 20 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Voting Data Exposed\" , \"id\" : 16 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Additional Bot Owners/Editors\" , \"id\" : 17 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Certification Program\" , \"id\" : 10 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Widget\" , \"id\" : 22 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 } ] }","title":"getBotList(String, Site|String)"},{"location":"wiki/deprecated/getaction/#getbotlistsstring","text":"Returns : JSONObject Retrieves the API information of all bot lists (including defunct ones).","title":"getBotLists(String)"},{"location":"wiki/deprecated/getaction/#getbotlistfeaturesstring-sitestring","text":"Returns : JSONArray Retrieves the features of a specific bot list. The listed features can be positive but also negative. Example JSON (Click to open/close) [ { \"name\" : \"Offers Paid Promotion\" , \"id\" : 21 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"HTML Long Description\" , \"id\" : 6 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot GitHub Link\" , \"id\" : 15 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Support Link\" , \"id\" : 8 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Custom Bot Website Link\" , \"id\" : 13 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Discord Bot Support Link\" , \"id\" : 12 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Voting\" , \"id\" : 2 , \"display\" : 2 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Votes sent to Webhooks\" , \"id\" : 24 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Categories or Tags\" , \"id\" : 9 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Mobile Support\" , \"id\" : 26 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Search\" , \"id\" : 23 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Requires Owner in Server\" , \"id\" : 25 , \"display\" : 0 , \"type\" : 1 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Server Count API\" , \"id\" : 3 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }, { \"name\" : \"Has Ads on Site\" , \"id\" : 11 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Paid Access\" , \"id\" : 19 , \"display\" : 5 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Internationalisation Support\" , \"id\" : 27 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Iframe Long Description\" , \"id\" : 5 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Markdown Long Description\" , \"id\" : 4 , \"display\" : 4 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Certified Bot Vanity URLs\" , \"id\" : 18 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Donate Link\" , \"id\" : 14 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Custom Bot Invite Link\" , \"id\" : 7 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Vanity URLs for all\" , \"id\" : 20 , \"display\" : 3 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Voting Data Exposed\" , \"id\" : 16 , \"display\" : 2 , \"type\" : 1 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Additional Bot Owners/Editors\" , \"id\" : 17 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Certification Program\" , \"id\" : 10 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 }, { \"name\" : \"Has Widget\" , \"id\" : 22 , \"display\" : 0 , \"type\" : 0 , \"description\" : null , \"value\" : 0 } ]","title":"getBotListFeatures(String, Site|String)"},{"location":"wiki/deprecated/requesthandler/","text":"Deprecated This class is marked as deprecated since version 3.0.0! Use GetBotAction , GetListAction or PostAction respectively. The RequestHandler is used to post the guild counts or since Version 2.0.0 also get either the botlists or bot info from those Lists. Posting guild counts requires you to previously set an instance of [[BotBlockAPI]]. Getting an instance \u00b6 You first need to get an instance of the RequestHandler. To get one, just call new RequestHandler() . RequestHandler handler = new RequestHandler (); Note Since version 2.3.0 does the RequestHandler use caching for different GET methods. If you for some reason don't want to have caching enabled (which you should since it also acts as a rate-limit prevention) you can do the following when getting an instance of the RequestHandler: // true means we disable the caching. RequestHandler handler = new RequestHandler ( true ); Post Guild counts \u00b6 The RequestHandler offers different ways to post your guild counts. Automatic \u00b6 To post your guild counts automatically you have to call the startAutoPosting method. The method requires either one of the following options: An instance of ShardManager . An instance of JDA . The bots ID as long and the guild counts as an integer. The bots ID as String and the guild counts as an integer. All methods require an instance of BotBlockAPI with the set sites and tokens. The delay is defined through the [[setUpdateInterval|BotBlockAPI#setupdateintervalinteger]] method. Examples \u00b6 Here are some examples of different types. private JDA jda = /* Get instance of JDA */ private ShardManager shardManager = /* Get instance of ShardManager */ private int guilds = /* Get the guild count */ private RequestHandler handler = new RequestHandler (); private BotBlockAPI api = /* Get instance of BotBlockAPI */ handler . startAutoPosting ( jda , api ); handler . startAutoPosting ( shardManager , api ); handler . startAutoPosting ( 123456789012345678L , guilds , api ); handler . startAutoPosting ( \"123456789012345678\" , guilds , api ); Manual \u00b6 If you want to manually post the guild counts could you do this through the postGuilds method. Similar to the automatic method does this one have different types that require different things. - An instance of ShardManager . - An instance of JDA . - The bots ID as long and the guild counts as an integer. - The bots ID as String and the guild counts as an integer. All methods require an instance of BotBlockAPI with the set sites and tokens. The delay is defined through the [[setUpdateInterval|BotBlockAPI#setupdateintervalinteger]] method. Examples \u00b6 Here are some examples of different types. private JDA jda = /* Get instance of JDA */ private ShardManager shardManager = /* Get instance of ShardManager */ private int guilds = /* Get the guild count */ private RequestHandler handler = new RequestHandler (); private BotBlockAPI api = /* Get instance of BotBlockAPI */ handler . postGuilds ( jda , api ); handler . postGuilds ( shardManager , api ); handler . postGuilds ( 123456789012345678L , guilds , api ); handler . postGuilds ( \"123456789012345678\" , guilds , api ); Get Bot lists or Bot info \u00b6 Since Version 2.0.0 can you also receive either all bot lists or bot info from the bot lists. Those methods don't require an instance of BotBlockAPI to be set. All botlists \u00b6 You can call getBotlists(String) to receive a JSONObject of all supported Botlists by BotBlock.org or getBotlist(String, Site|String) to get one specific Botlist. Responses \u00b6 Here are the possible JSONObjects of both methods. The second method uses lbots.org as an example. All botlists : { \"botlist.space\" : { \"api_docs\" : \"https://docs.botlist.space\" , \"api_post\" : \"https://api.botlist.space/v1/bots/:id\" , \"api_field\" : \"server_count\" , \"api_shard_id\" : null , \"api_shard_count\" : null , \"api_shards\" : \"shards\" , \"api_get\" : \"https://api.botlist.space/v1/bots/:id\" }, \"lbots.org\" : { \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null } } Single botlist : { \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null } Complete Botinfo \u00b6 Calling getAll(...) gives you the info of the bot from all botlists available on BotBlock as a JSONObject. You can provide the ShardManager, JDA instance or the Bot ID as String or long. A response could look like this: { \"id\" : \"123456789012345678\" , \"name\" : \"MyBot\" , \"discriminator\" : \"1234\" , \"owners\" : [ \"234567890123456789\" ], \"server_count\" : 100 , \"invite\" : \"https://discordapp.com/oauth2/authorize?client_id=123456789012345678&scope=bot\" , \"list_data\" : { \"botlist.space\" : [ { \"data\" }, 200 ], \"lbots.org\" : [ { \"data\" }, 404 ] } } The owners, server count and invite are based on how often those values appear on the different sites. {\"data\"} is different for each site and therefore depends on what the site returns. Bot info from all botlists \u00b6 You can call getBotInfos(...) to receive only the information of the different botlists. The method supports ShardManager, JDA and the Bot ID as both Long or String. The response can look like this: { \"botlist.space\" : [ { \"data\" }, 200 ], \"lbots.org\" : [ { \"data\" }, 404 ] } Bot info from a single site \u00b6 You can use getBotInfo(..., Site|String) to receive the info of a single botlist as JSONArray. Similar to getBotlists(...) does it support ShardManager, JDA and the Bot ID. Example response : [ { \"data\" }, 200 ] {\"data\"} is the JSON returned by the botlist and therefore depends on the site itself. Get Owners \u00b6 getOwners(...) allows you to get the owners as an ArrayList (Content-type String).","title":"RequestHandler"},{"location":"wiki/deprecated/requesthandler/#getting-an-instance","text":"You first need to get an instance of the RequestHandler. To get one, just call new RequestHandler() . RequestHandler handler = new RequestHandler (); Note Since version 2.3.0 does the RequestHandler use caching for different GET methods. If you for some reason don't want to have caching enabled (which you should since it also acts as a rate-limit prevention) you can do the following when getting an instance of the RequestHandler: // true means we disable the caching. RequestHandler handler = new RequestHandler ( true );","title":"Getting an instance"},{"location":"wiki/deprecated/requesthandler/#post-guild-counts","text":"The RequestHandler offers different ways to post your guild counts.","title":"Post Guild counts"},{"location":"wiki/deprecated/requesthandler/#automatic","text":"To post your guild counts automatically you have to call the startAutoPosting method. The method requires either one of the following options: An instance of ShardManager . An instance of JDA . The bots ID as long and the guild counts as an integer. The bots ID as String and the guild counts as an integer. All methods require an instance of BotBlockAPI with the set sites and tokens. The delay is defined through the [[setUpdateInterval|BotBlockAPI#setupdateintervalinteger]] method.","title":"Automatic"},{"location":"wiki/deprecated/requesthandler/#examples","text":"Here are some examples of different types. private JDA jda = /* Get instance of JDA */ private ShardManager shardManager = /* Get instance of ShardManager */ private int guilds = /* Get the guild count */ private RequestHandler handler = new RequestHandler (); private BotBlockAPI api = /* Get instance of BotBlockAPI */ handler . startAutoPosting ( jda , api ); handler . startAutoPosting ( shardManager , api ); handler . startAutoPosting ( 123456789012345678L , guilds , api ); handler . startAutoPosting ( \"123456789012345678\" , guilds , api );","title":"Examples"},{"location":"wiki/deprecated/requesthandler/#manual","text":"If you want to manually post the guild counts could you do this through the postGuilds method. Similar to the automatic method does this one have different types that require different things. - An instance of ShardManager . - An instance of JDA . - The bots ID as long and the guild counts as an integer. - The bots ID as String and the guild counts as an integer. All methods require an instance of BotBlockAPI with the set sites and tokens. The delay is defined through the [[setUpdateInterval|BotBlockAPI#setupdateintervalinteger]] method.","title":"Manual"},{"location":"wiki/deprecated/requesthandler/#examples_1","text":"Here are some examples of different types. private JDA jda = /* Get instance of JDA */ private ShardManager shardManager = /* Get instance of ShardManager */ private int guilds = /* Get the guild count */ private RequestHandler handler = new RequestHandler (); private BotBlockAPI api = /* Get instance of BotBlockAPI */ handler . postGuilds ( jda , api ); handler . postGuilds ( shardManager , api ); handler . postGuilds ( 123456789012345678L , guilds , api ); handler . postGuilds ( \"123456789012345678\" , guilds , api );","title":"Examples"},{"location":"wiki/deprecated/requesthandler/#get-bot-lists-or-bot-info","text":"Since Version 2.0.0 can you also receive either all bot lists or bot info from the bot lists. Those methods don't require an instance of BotBlockAPI to be set.","title":"Get Bot lists or Bot info"},{"location":"wiki/deprecated/requesthandler/#all-botlists","text":"You can call getBotlists(String) to receive a JSONObject of all supported Botlists by BotBlock.org or getBotlist(String, Site|String) to get one specific Botlist.","title":"All botlists"},{"location":"wiki/deprecated/requesthandler/#responses","text":"Here are the possible JSONObjects of both methods. The second method uses lbots.org as an example. All botlists : { \"botlist.space\" : { \"api_docs\" : \"https://docs.botlist.space\" , \"api_post\" : \"https://api.botlist.space/v1/bots/:id\" , \"api_field\" : \"server_count\" , \"api_shard_id\" : null , \"api_shard_count\" : null , \"api_shards\" : \"shards\" , \"api_get\" : \"https://api.botlist.space/v1/bots/:id\" }, \"lbots.org\" : { \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null } } Single botlist : { \"api_docs\" : \"https://lbots.org/api/docs\" , \"api_post\" : \"https://lbots.org/api/v1/bots/:id/stats\" , \"api_field\" : \"guild_count\" , \"api_shard_id\" : \"shard_id\" , \"api_shard_count\" : \"shard_count\" , \"api_shards\" : null , \"api_get\" : null }","title":"Responses"},{"location":"wiki/deprecated/requesthandler/#complete-botinfo","text":"Calling getAll(...) gives you the info of the bot from all botlists available on BotBlock as a JSONObject. You can provide the ShardManager, JDA instance or the Bot ID as String or long. A response could look like this: { \"id\" : \"123456789012345678\" , \"name\" : \"MyBot\" , \"discriminator\" : \"1234\" , \"owners\" : [ \"234567890123456789\" ], \"server_count\" : 100 , \"invite\" : \"https://discordapp.com/oauth2/authorize?client_id=123456789012345678&scope=bot\" , \"list_data\" : { \"botlist.space\" : [ { \"data\" }, 200 ], \"lbots.org\" : [ { \"data\" }, 404 ] } } The owners, server count and invite are based on how often those values appear on the different sites. {\"data\"} is different for each site and therefore depends on what the site returns.","title":"Complete Botinfo"},{"location":"wiki/deprecated/requesthandler/#bot-info-from-all-botlists","text":"You can call getBotInfos(...) to receive only the information of the different botlists. The method supports ShardManager, JDA and the Bot ID as both Long or String. The response can look like this: { \"botlist.space\" : [ { \"data\" }, 200 ], \"lbots.org\" : [ { \"data\" }, 404 ] }","title":"Bot info from all botlists"},{"location":"wiki/deprecated/requesthandler/#bot-info-from-a-single-site","text":"You can use getBotInfo(..., Site|String) to receive the info of a single botlist as JSONArray. Similar to getBotlists(...) does it support ShardManager, JDA and the Bot ID. Example response : [ { \"data\" }, 200 ] {\"data\"} is the JSON returned by the botlist and therefore depends on the site itself.","title":"Bot info from a single site"},{"location":"wiki/deprecated/requesthandler/#get-owners","text":"getOwners(...) allows you to get the owners as an ArrayList (Content-type String).","title":"Get Owners"},{"location":"wiki/methods/","text":"Methods \u00b6 JavaBotBlockAPI offers many different methods for either GETting information or POSTing information. Below can you find a complete list of all available classes. Pages \u00b6 BotBlockAPI GET \u00b6 GetBotAction GetListAction POST \u00b6 PostAction","title":"Methods"},{"location":"wiki/methods/#methods","text":"JavaBotBlockAPI offers many different methods for either GETting information or POSTing information. Below can you find a complete list of all available classes.","title":"Methods"},{"location":"wiki/methods/#pages","text":"BotBlockAPI","title":"Pages"},{"location":"wiki/methods/#get","text":"GetBotAction GetListAction","title":"GET"},{"location":"wiki/methods/#post","text":"PostAction","title":"POST"},{"location":"wiki/methods/botblockapi/","text":"The BotBlockAPI is the essential class for loading botlist sites and their API tokens to then post the Guild counts. Posting the guild counts is handled through the PostAction class. Getting started \u00b6 To start, you need to add the sites and their corresponding API-tokens to the BotBlockAPI class. You may receive an API-token from the bot lists your bot is listed on. We recommend using the Builder class for an easy way of adding the tokens and changing other settings. If you still want to load the sites manually then you have to provide a HashMap<String, String> with the site name and their token. Example \u00b6 private Map < String , String > botSites = new HashMap <> (); botSites . put ( \"lbots.org\" , \"MyT0k3N.1\" ) botSites . put ( \"botlist.space\" , \"MyT0k3N.2\" ) BotBlockAPI api = new BotBlockAPI ( botSites ); You can also use BotBlockAPI(Map, Integer) to set an update delay for the auto-post option of the PostAction . Builder \u00b6 The Builder is a internal class inside the BotBlockAPI to create an instance of BotBlockAPI easy and fast. The class offers the following methods to use: addAuthToken(Site, String) \u00b6 Required : Yes (You have to use it at least once) Adds the provided Site and token to the HashMap. addAuthToken(String, String) \u00b6 Required : Yes (You have to use it at least once) Adds the provided Site and token to the HashMap. A list of all supported sites can be found on the API doc of BotBlock setAuthTokens(HashMap<String, String>) \u00b6 Required : Yes (When you didn't use addAuthToken(..., String) at least once.) Similar to addAuthToken but instead directly sets the HashMap. This will overwrite every previously set entry. setUpdateInterval(Integer) \u00b6 Required : No. (Default is 30) Sets the delay (in minutes) in which the auto-post option should post the guild counts to the BotBlock API. The minimum delay is 2 minutes. Anything below this number will throw an IllegalArgumentException . build() \u00b6 Required : Yes Builds the Instance of the BotBlockAPI with the previously set information.","title":"BotBlockAPI"},{"location":"wiki/methods/botblockapi/#getting-started","text":"To start, you need to add the sites and their corresponding API-tokens to the BotBlockAPI class. You may receive an API-token from the bot lists your bot is listed on. We recommend using the Builder class for an easy way of adding the tokens and changing other settings. If you still want to load the sites manually then you have to provide a HashMap<String, String> with the site name and their token.","title":"Getting started"},{"location":"wiki/methods/botblockapi/#example","text":"private Map < String , String > botSites = new HashMap <> (); botSites . put ( \"lbots.org\" , \"MyT0k3N.1\" ) botSites . put ( \"botlist.space\" , \"MyT0k3N.2\" ) BotBlockAPI api = new BotBlockAPI ( botSites ); You can also use BotBlockAPI(Map, Integer) to set an update delay for the auto-post option of the PostAction .","title":"Example"},{"location":"wiki/methods/botblockapi/#builder","text":"The Builder is a internal class inside the BotBlockAPI to create an instance of BotBlockAPI easy and fast. The class offers the following methods to use:","title":"Builder"},{"location":"wiki/methods/botblockapi/#addauthtokensite-string","text":"Required : Yes (You have to use it at least once) Adds the provided Site and token to the HashMap.","title":"addAuthToken(Site, String)"},{"location":"wiki/methods/botblockapi/#addauthtokenstring-string","text":"Required : Yes (You have to use it at least once) Adds the provided Site and token to the HashMap. A list of all supported sites can be found on the API doc of BotBlock","title":"addAuthToken(String, String)"},{"location":"wiki/methods/botblockapi/#setauthtokenshashmapstring-string","text":"Required : Yes (When you didn't use addAuthToken(..., String) at least once.) Similar to addAuthToken but instead directly sets the HashMap. This will overwrite every previously set entry.","title":"setAuthTokens(HashMap&lt;String, String&gt;)"},{"location":"wiki/methods/botblockapi/#setupdateintervalinteger","text":"Required : No. (Default is 30) Sets the delay (in minutes) in which the auto-post option should post the guild counts to the BotBlock API. The minimum delay is 2 minutes. Anything below this number will throw an IllegalArgumentException .","title":"setUpdateInterval(Integer)"},{"location":"wiki/methods/botblockapi/#build","text":"Required : Yes Builds the Instance of the BotBlockAPI with the previously set information.","title":"build()"},{"location":"wiki/methods/get/getbotaction/","text":"The GetBotAction class allows to perform GET requests on the /api/bots/:id path of BotBlock. The methods require a valid Bot ID (Either as Long or String) to be provided. Note All requests are getting cached for 2 minutes to prevent possible rate limits. If you want to disable this, use GetBotAction(true) . We do not recommend using this without any rate limit or caching in place! Index \u00b6 Disable caching Methods getBotInfo(Long|String) getBotListInfo(Long|String) getBotListInfo(Long|String, Site|String) getDiscriminator(Long|String) getGitHub(Long|String) getInvite(Long|String) getLibrary(Long|String) getName(Long|String) getOwners(Long|String) getPrefix(Long|String) getServerCount(Long|String) getSupportLink(Long|String) getWebsite(Long|String) Disable caching \u00b6 If you want to disable caching, will you need to add a boolean to the GetBotAction constructor like this: // \"true\" disables the internal caching. GetBotAction getBotAction = new GetBotAction ( true ); Methods \u00b6 getBotInfo(Long|String) \u00b6 Returns : JSONObject Returns the complete information of the bot as JSONObject. If you only want to retrieve the information from the different bot lists, use getBotListInfo(Long|String) instead. Example JSON { \"id\" : \"123456789012345678\" , \"username\" : \"Unknown\" , \"discriminator\" : \"0000\" , \"owners\" : [], \"server_count\" : null , \"invite\" : \"\" , \"prefix\" : \"\" , \"website\" : \"\" , \"github\" : \"\" , \"support\" : \"\" , \"library\" : \"\" , \"list_data\" : { \"botlist\" : [ { \"json\" : \"This JSON is unique for each bot list\" }, 404 ] } } getBotListInfo(Long|String) \u00b6 Returns : JSONObject Retrieves the information of a bot from all bot lists. The returned JSONObject contains JSONArrays of each bot list, which contains the response (JSON) of the site and the returned HTTP status. getBotListInfo(Long|String, Site|String) \u00b6 Returns : JSONArray Retrieves the information of a bot on a specific bot list. The returned JSONArray contains the response (JSON) of the bot list and the returned HTTP status of that site. getDiscriminator(Long|String) \u00b6 Returns : String Gets the discriminator of the bot. Will be 0000 when the user is invalid/unknown. getGitHub(Long|String) \u00b6 Returns : Possibly-empty String Gets the link to a bot's GitHub. Will be empty when the user is invalid/unknown or this value isn't set on any bot list. getInvite(Long|String) \u00b6 Returns : Possibly-empty String Gets the OAuth invite used to make the bot join your Discord. Will be empty when the user is invalid/unknown or this value isn't set on any bot list. getLibrary(Long|String) \u00b6 Returns : Possibly-empty String Gets the library the bot uses (f.e. JDA or discord.js). Will be empty when the user is invalid/unknown or this value isn't set on any bot list. getName(Long|String) \u00b6 Return : String Gets the name of the bot. Will be Unknown when the user is invalid/unknown. getOwners(Long|String) \u00b6 Returns : Possibly-empty ArrayList\\ Gets a list of owners from the bot. Will be an empty ArrayList\\ when the user is invalid/unknown. getPrefix(Long|String) \u00b6 Returns : Possibly-empty String Gets the prefix of the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list. getServerCount(Long|String) \u00b6 Returns : Possibly-null Integer Gets the server count of the bot. Will be null when the user is invalid/unknown or this value isn't set on any bot list. getSupportLink(Long|String) \u00b6 Returns : Possibly-empty String Retrieves the Support link (i.e. Discord invite) of the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list. getWebsite(Long|String) \u00b6 Returns : Possibly-empty String Retrieves the website link from the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"GetBotAction"},{"location":"wiki/methods/get/getbotaction/#index","text":"Disable caching Methods getBotInfo(Long|String) getBotListInfo(Long|String) getBotListInfo(Long|String, Site|String) getDiscriminator(Long|String) getGitHub(Long|String) getInvite(Long|String) getLibrary(Long|String) getName(Long|String) getOwners(Long|String) getPrefix(Long|String) getServerCount(Long|String) getSupportLink(Long|String) getWebsite(Long|String)","title":"Index"},{"location":"wiki/methods/get/getbotaction/#disable-caching","text":"If you want to disable caching, will you need to add a boolean to the GetBotAction constructor like this: // \"true\" disables the internal caching. GetBotAction getBotAction = new GetBotAction ( true );","title":"Disable caching"},{"location":"wiki/methods/get/getbotaction/#methods","text":"","title":"Methods"},{"location":"wiki/methods/get/getbotaction/#getbotinfolongstring","text":"Returns : JSONObject Returns the complete information of the bot as JSONObject. If you only want to retrieve the information from the different bot lists, use getBotListInfo(Long|String) instead. Example JSON { \"id\" : \"123456789012345678\" , \"username\" : \"Unknown\" , \"discriminator\" : \"0000\" , \"owners\" : [], \"server_count\" : null , \"invite\" : \"\" , \"prefix\" : \"\" , \"website\" : \"\" , \"github\" : \"\" , \"support\" : \"\" , \"library\" : \"\" , \"list_data\" : { \"botlist\" : [ { \"json\" : \"This JSON is unique for each bot list\" }, 404 ] } }","title":"getBotInfo(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getbotlistinfolongstring","text":"Returns : JSONObject Retrieves the information of a bot from all bot lists. The returned JSONObject contains JSONArrays of each bot list, which contains the response (JSON) of the site and the returned HTTP status.","title":"getBotListInfo(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getbotlistinfolongstring-sitestring","text":"Returns : JSONArray Retrieves the information of a bot on a specific bot list. The returned JSONArray contains the response (JSON) of the bot list and the returned HTTP status of that site.","title":"getBotListInfo(Long|String, Site|String)"},{"location":"wiki/methods/get/getbotaction/#getdiscriminatorlongstring","text":"Returns : String Gets the discriminator of the bot. Will be 0000 when the user is invalid/unknown.","title":"getDiscriminator(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getgithublongstring","text":"Returns : Possibly-empty String Gets the link to a bot's GitHub. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getGitHub(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getinvitelongstring","text":"Returns : Possibly-empty String Gets the OAuth invite used to make the bot join your Discord. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getInvite(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getlibrarylongstring","text":"Returns : Possibly-empty String Gets the library the bot uses (f.e. JDA or discord.js). Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getLibrary(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getnamelongstring","text":"Return : String Gets the name of the bot. Will be Unknown when the user is invalid/unknown.","title":"getName(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getownerslongstring","text":"Returns : Possibly-empty ArrayList\\ Gets a list of owners from the bot. Will be an empty ArrayList\\ when the user is invalid/unknown.","title":"getOwners(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getprefixlongstring","text":"Returns : Possibly-empty String Gets the prefix of the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getPrefix(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getservercountlongstring","text":"Returns : Possibly-null Integer Gets the server count of the bot. Will be null when the user is invalid/unknown or this value isn't set on any bot list.","title":"getServerCount(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getsupportlinklongstring","text":"Returns : Possibly-empty String Retrieves the Support link (i.e. Discord invite) of the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getSupportLink(Long|String)"},{"location":"wiki/methods/get/getbotaction/#getwebsitelongstring","text":"Returns : Possibly-empty String Retrieves the website link from the bot. Will be empty when the user is invalid/unknown or this value isn't set on any bot list.","title":"getWebsite(Long|String)"},{"location":"wiki/methods/get/getlistaction/","text":"The GetListAction allows to perform GET requests towards the /api/lists and /api/lists/:id endpoint of the BotBlock API. Note All requests are getting cached for 2 minutes to prevent possible rate limits. If you want to disable this, use GetListAction(true) . We do not recommend doing this without any caching or rate limit-system in place! Index \u00b6 Disable caching Methods getApiField(String, Site|String, ApiField) getBotWidget(String, Site|String) getDescription(String, Site|String) getDiscordInvite(String, Site|String) getFeatures(String, Site|String) getFilteredLists(String) getIcon(String, Site|String) getId(String, Site|String) getLanguage(String, Site|String) getList(String, Site|String) getLists(String) getName(String, Site|String) getOwners(String, Site|String) getTimeAdded(String, Site|String) getUrl(String, Site|String) isDefunct(String, Site|String) isDiscordOnly(String, Site|String) Disable caching \u00b6 If you want to disable caching, will you need to add a boolean to the GetListAction constructor like this: // \"true\" disables the internal caching. GetListAction getListAction = new GetListAction ( true ); Methods \u00b6 getApiField(String, Site|String, ApiField) \u00b6 Returns : Possibly-null String Gets one of the JSON fields that are prefixed with api_ . The returned String can either be text (i.e. name of JSON field for POST requests), a URL (i.e. to documentation) or null. getBotWidget(String, Site|String) \u00b6 Returns : Possibly-null String Gets the link for displaying a bot widget (image with various information of the bot from the bot list). This may return null if no widget link was set. getDescription(String, Site|String) \u00b6 Returns : Possibly-null String Gets the description (tag line) of the bot list. This may return null if no description is set. getDiscordInvite(String, Site|String) \u00b6 Returns : Possibly-null String Gets the Discord invite of the bot list. This may return null if no invite was set. getFeatures(String, Site|String) \u00b6 Returns : Possibly-empty JSONArray Gets a JSONArray containing all the positive and negative features. This may return an empty JSONArray if no features are set. An entry of the JSONArray may look like this: { \"name\" : \"Displayed name of feature\" , \"id\" : -1 , \"display\" : -1 , \"type\" : 0 , \"description\" : null , \"value\" : 1 } getFilteredList(String) \u00b6 Returns : JSONObject Gets the lists, but with only the API fields present. getIcon(String, Site|String) \u00b6 Returns : Possibly-null String Gets the URL to the Bot list-icon. This may return null if no icon was set. getId(String, Site|String) \u00b6 Returns : String Gets the id of a bot list. This is not a numerical id (id from Discord) but what is used by BotBlock for things like the POST API. getLanguage(String, Site|String) \u00b6 Returns : String Gets the primary language of the bot list. getList(String, Site|String) \u00b6 Returns : JSONObject Gets the full info of a bot list. getLists(String) \u00b6 Returns : JSONObject Gets all available bot lists, including those that are defunct getName(String, Site|String) \u00b6 Returns : String Gets the displayed name of the bot list. getOwners(String, Site|String) \u00b6 Returns : Possibly-null String Gets the owners of a bot list. The returned String is in the format <name>#<discrim> (<id>), <name>#<discrim> (<id>), ... This may return null if no owners are set. getTimeAdded(String, Site|String) \u00b6 Returns : Integer Gets the date and time (UNIX timestamp) of when the bot list was added to BotBlock. getUrl(String, Site|String) \u00b6 Returns : String Gets the URL of the bot list. isDefunct(String, Site|String) \u00b6 Returns : Boolean Returns true when the bot list is defunct and false otherwise. A defunct site is not usable by the API of BotBlock, but can still be found on the website and accessed through the /api/lists/:id endpoint. isDiscordOnly(String, Site|String) \u00b6 Returns : Boolean Returns true when the bot list is only for Discord bots and false otherwise.","title":"GetListAction"},{"location":"wiki/methods/get/getlistaction/#index","text":"Disable caching Methods getApiField(String, Site|String, ApiField) getBotWidget(String, Site|String) getDescription(String, Site|String) getDiscordInvite(String, Site|String) getFeatures(String, Site|String) getFilteredLists(String) getIcon(String, Site|String) getId(String, Site|String) getLanguage(String, Site|String) getList(String, Site|String) getLists(String) getName(String, Site|String) getOwners(String, Site|String) getTimeAdded(String, Site|String) getUrl(String, Site|String) isDefunct(String, Site|String) isDiscordOnly(String, Site|String)","title":"Index"},{"location":"wiki/methods/get/getlistaction/#disable-caching","text":"If you want to disable caching, will you need to add a boolean to the GetListAction constructor like this: // \"true\" disables the internal caching. GetListAction getListAction = new GetListAction ( true );","title":"Disable caching"},{"location":"wiki/methods/get/getlistaction/#methods","text":"","title":"Methods"},{"location":"wiki/methods/get/getlistaction/#getapifieldstring-sitestring-apifield","text":"Returns : Possibly-null String Gets one of the JSON fields that are prefixed with api_ . The returned String can either be text (i.e. name of JSON field for POST requests), a URL (i.e. to documentation) or null.","title":"getApiField(String, Site|String, ApiField)"},{"location":"wiki/methods/get/getlistaction/#getbotwidgetstring-sitestring","text":"Returns : Possibly-null String Gets the link for displaying a bot widget (image with various information of the bot from the bot list). This may return null if no widget link was set.","title":"getBotWidget(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getdescriptionstring-sitestring","text":"Returns : Possibly-null String Gets the description (tag line) of the bot list. This may return null if no description is set.","title":"getDescription(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getdiscordinvitestring-sitestring","text":"Returns : Possibly-null String Gets the Discord invite of the bot list. This may return null if no invite was set.","title":"getDiscordInvite(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getfeaturesstring-sitestring","text":"Returns : Possibly-empty JSONArray Gets a JSONArray containing all the positive and negative features. This may return an empty JSONArray if no features are set. An entry of the JSONArray may look like this: { \"name\" : \"Displayed name of feature\" , \"id\" : -1 , \"display\" : -1 , \"type\" : 0 , \"description\" : null , \"value\" : 1 }","title":"getFeatures(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getfilteredliststring","text":"Returns : JSONObject Gets the lists, but with only the API fields present.","title":"getFilteredList(String)"},{"location":"wiki/methods/get/getlistaction/#geticonstring-sitestring","text":"Returns : Possibly-null String Gets the URL to the Bot list-icon. This may return null if no icon was set.","title":"getIcon(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getidstring-sitestring","text":"Returns : String Gets the id of a bot list. This is not a numerical id (id from Discord) but what is used by BotBlock for things like the POST API.","title":"getId(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getlanguagestring-sitestring","text":"Returns : String Gets the primary language of the bot list.","title":"getLanguage(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getliststring-sitestring","text":"Returns : JSONObject Gets the full info of a bot list.","title":"getList(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getlistsstring","text":"Returns : JSONObject Gets all available bot lists, including those that are defunct","title":"getLists(String)"},{"location":"wiki/methods/get/getlistaction/#getnamestring-sitestring","text":"Returns : String Gets the displayed name of the bot list.","title":"getName(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#getownersstring-sitestring","text":"Returns : Possibly-null String Gets the owners of a bot list. The returned String is in the format <name>#<discrim> (<id>), <name>#<discrim> (<id>), ... This may return null if no owners are set.","title":"getOwners(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#gettimeaddedstring-sitestring","text":"Returns : Integer Gets the date and time (UNIX timestamp) of when the bot list was added to BotBlock.","title":"getTimeAdded(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#geturlstring-sitestring","text":"Returns : String Gets the URL of the bot list.","title":"getUrl(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#isdefunctstring-sitestring","text":"Returns : Boolean Returns true when the bot list is defunct and false otherwise. A defunct site is not usable by the API of BotBlock, but can still be found on the website and accessed through the /api/lists/:id endpoint.","title":"isDefunct(String, Site|String)"},{"location":"wiki/methods/get/getlistaction/#isdiscordonlystring-sitestring","text":"Returns : Boolean Returns true when the bot list is only for Discord bots and false otherwise.","title":"isDiscordOnly(String, Site|String)"},{"location":"wiki/methods/post/postaction/","text":"The PostAction class contains all methods used to post to the BotBlock API. Notes All methods of this class require a [[BotBlockAPI]] instance to be set! All methods can be used with either a JDA instance, a ShardManager instance or the ID of the bot (As String or Long) and guild count. Refer to the Javadoc for more information. Post automatically \u00b6 You can use the enableAutoPost method to post your bots guild count automatically. You set the delay in the BotBlockAPI through the setUpdateInterval method. Note that the delay can't be below 2. To stop the automatic posting, use the disableAutoPost method. Example: JDA jda = /* Get your JDA instance */ // 1. Create an instance of the BotBlockAPI BotBlockAPI api = new BotBlockAPI . Builder () . addAuthToken ( \"lbots.org\" , \"My.5ecr37.T0k3n\" ) . addAuthToken ( Site . BOTLIST_SPACE , \"My.s3crEt.7okEn\" ) // The API has a enum with all sites. . setUpdateInterval ( 5 ) // Post all 5 minutes. . build (); // 2. Create an instance of the PostAction PostAction post = new PostAction (); // 3. Call the enableAutoPost method post . enableAutoPost ( jda , api ); // 4. Disable the auto-posting post . disableAutoPost (); Post manually \u00b6 To post manually will you need to use the postGuilds method. Example: JDA jda = /* Get your JDA instance */ // 1. Create an instance of the BotBlockAPI BotBlockAPI api = new BotBlockAPI . Builder () . addAuthToken ( \"lbots.org\" , \"My.5ecr37.T0k3n\" ) . addAuthToken ( Site . BOTLIST_SPACE , \"My.s3crEt.7okEn\" ) // The API has a enum with all sites. . build (); // 2. Create an instance of the PostAction PostAction post = new PostAction (); // 3. Call the postGuilds method you want to use post . postGuilds ( jda , api ); Exceptions \u00b6 The methods may throw one of those errors: RatelimitedException When you get rate limited by the BotBlock site. You can only post every 120 seconds (2 minutes). IOException When the request couldn't be performed. Causes can be different.","title":"PostAction"},{"location":"wiki/methods/post/postaction/#post-automatically","text":"You can use the enableAutoPost method to post your bots guild count automatically. You set the delay in the BotBlockAPI through the setUpdateInterval method. Note that the delay can't be below 2. To stop the automatic posting, use the disableAutoPost method. Example: JDA jda = /* Get your JDA instance */ // 1. Create an instance of the BotBlockAPI BotBlockAPI api = new BotBlockAPI . Builder () . addAuthToken ( \"lbots.org\" , \"My.5ecr37.T0k3n\" ) . addAuthToken ( Site . BOTLIST_SPACE , \"My.s3crEt.7okEn\" ) // The API has a enum with all sites. . setUpdateInterval ( 5 ) // Post all 5 minutes. . build (); // 2. Create an instance of the PostAction PostAction post = new PostAction (); // 3. Call the enableAutoPost method post . enableAutoPost ( jda , api ); // 4. Disable the auto-posting post . disableAutoPost ();","title":"Post automatically"},{"location":"wiki/methods/post/postaction/#post-manually","text":"To post manually will you need to use the postGuilds method. Example: JDA jda = /* Get your JDA instance */ // 1. Create an instance of the BotBlockAPI BotBlockAPI api = new BotBlockAPI . Builder () . addAuthToken ( \"lbots.org\" , \"My.5ecr37.T0k3n\" ) . addAuthToken ( Site . BOTLIST_SPACE , \"My.s3crEt.7okEn\" ) // The API has a enum with all sites. . build (); // 2. Create an instance of the PostAction PostAction post = new PostAction (); // 3. Call the postGuilds method you want to use post . postGuilds ( jda , api );","title":"Post manually"},{"location":"wiki/methods/post/postaction/#exceptions","text":"The methods may throw one of those errors: RatelimitedException When you get rate limited by the BotBlock site. You can only post every 120 seconds (2 minutes). IOException When the request couldn't be performed. Causes can be different.","title":"Exceptions"}]}